{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sqlServerName": {
      "type": "string"
    },
    "sqlSecondaryServerName": {
      "type": "string"
    },
    "sqlSecondaryDbLocation": {
      "type": "string",
      "defaultValue": "West US2"
    },
    "sqlFailoverGroupName": {
      "type": "string",
      "defaultValue": "sqlFG",
      "metadata": {
        "description": "The name of the failover group."
      }
    },
    "administratorLogin": {
      "type": "string"
    },
    "administratorLoginPassword": {
      "type": "securestring"
    },
    "sqldbName": {
      "type": "string",
      "minLength": 1
    },
    "sqldbSize": {
      "type": "int",
      "defaultValue": 1073741824
    },
    "sqldbEdition": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "transparentDataEncryption": {
      "type": "string",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "defaultValue": "Enabled",
      "metadata": {
        "description": "Enable or disable Transparent Data Encryption (TDE) for the database."
      }
    },
    "sqldbRequestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    },
    "enableADS": {
      "defaultValue": false,
      "type": "bool",
      "metadata": {
        "description": "Enable Advanced Data Security."
      }
    },
    "enableFailoverGroup": {
      "defaultValue": false,
      "type": "bool",
      "metadata": {
        "description": "Enable Failover Groups - not available in Azure Gov."
      }
    },
    "enableGeoReplication": {
      "defaultValue": false,
      "type": "bool",
      "metadata": {
        "description": "Enable Geo Replication - available in all regions."
      }
    },
    "enableLogAnalytics": {
      "defaultValue": false,
      "type": "bool",
      "metadata": {
        "description": "Enable diagnostic logs that are sent to a Log Analytics workspace."
      }
    },
    "workspaceId": {
      "type": "string",
      "metadata": {
        "description": "Log Analytics workspace ID for the Log Analytics workspace to which logs will be sent."
      }
    }
  },
  "variables": {
    "serverResourceGroupName": "[resourceGroup().name]",
    "subscriptionId": "[subscription().subscriptionId]",
    "uniqueStorage": "[uniqueString(variables('subscriptionId'), variables('serverResourceGroupName'), resourceGroup().location)]",
    "storageName": "[tolower(concat('sqlva', variables('uniqueStorage')))]",
    "settingName": "[concat( parameters('sqldbName'),'diagnostic')]"
  },
  "resources": [
    {
      "name": "[parameters('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
      ],
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          "condition": "[parameters('enableFailoverGroup')]",
          "apiVersion": "2015-05-01-preview",
          "type": "failoverGroups",
          "name": "[parameters('sqlFailoverGroupName')]",
          "properties": {
            "serverName": "[parameters('sqlServerName')]",
            "partnerServers": [
              {
                "id": "[resourceId('Microsoft.Sql/servers/',parameters('sqlSecondaryServerName'))]"
              }
            ],
            "readWriteEndpoint": {
              "failoverPolicy": "Automatic",
              "failoverWithDataLossGracePeriodMinutes": 60
            },
            "readOnlyEndpoint": {
              "failoverPolicy": "Disabled"
            },
            "databases": [
              "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), parameters('sqldbName'))]"
            ]
          },
          "dependsOn": [
            "[parameters('sqlServerName')]",
            "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), parameters('sqldbName'))]",
            "[resourceId('Microsoft.Sql/servers/', parameters('sqlSecondaryServerName'))]"
          ]
        }
      ]
    },
    {
      "name": "[concat(parameters('sqlServerName'), '/', parameters('sqldbName'))]",
      "type": "Microsoft.Sql/servers/databases",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-01-preview",
      "dependsOn": [
      ],
      "properties": {
        "edition": "[parameters('sqldbEdition')]",
        "maxSizeBytes": "[parameters('sqldbSize')]",
        "requestedServiceObjectiveName": "[parameters('sqldbRequestedServiceObjectiveName')]"
      },
      "resources": [
        {
          "comments": "Transparent Data Encryption",
          "name": "current",
          "type": "transparentDataEncryption",
          "apiVersion": "2014-04-01-preview",
          "properties": {
            "status": "[parameters('transparentDataEncryption')]"
          },
          "dependsOn": [
            "[parameters('sqldbName')]"
          ]
        },
        {
          "condition": "[parameters('enableADS')]",
          "type": "securityAlertPolicies",
          "name": "Default",
          "apiVersion": "2018-06-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), parameters('sqldbName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "emailAccountAdmins": true
          }
        },
        {
          "condition": "[parameters('enableADS')]",
          "type": "vulnerabilityAssessments",
          "name": "Default",
          "apiVersion": "2018-06-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), parameters('sqldbName'))]"
          ],
          "properties": {
            "storageContainerPath": "[if(parameters('enableADS'), concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2018-07-01').primaryEndpoints.blob, 'vulnerability-assessment'), '')]",
            "storageAccountAccessKey": "[if(parameters('enableADS'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2018-02-01').keys[0].value, '')]",
            "recurringScans": {
              "isEnabled": true,
              "emailSubscriptionAdmins": true
            }
          }
        },
        {
          "condition": "[parameters('enableLogAnalytics')]",
          "type": "providers/diagnosticSettings",
          "name": "[concat('Microsoft.Insights/', variables('settingName'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), parameters('sqldbName'))]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "name": "[variables('settingName')]",
            "workspaceId": "[parameters('workspaceId')]",
            "logs": [
              {
                "category": "SQLInsights",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "AutomaticTuning",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "QueryStoreRuntimeStatistics",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "QueryStoreWaitStatistics",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "Errors",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "DatabaseWaitStatistics",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "Timeouts",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "Blocks",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "Deadlocks",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "Audit",
                "enabled": false,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "SQLSecurityAuditEvents",
                "enabled": false,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ],
            "metrics": [
              {
                "category": "Basic",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                },
                "timeGrain": null
              },
              {
                "category": "InstanceAndAppAdvanced",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                },
                "timeGrain": null
              }
            ]
          }
        }
      ]
    },
    {
      "condition": "[parameters('enableADS')]",
      "type": "Microsoft.Storage/storageAccounts",
      "kind": "Storage",
      "apiVersion": "2018-07-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('storageName')]",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "condition": "[parameters('enableGeoReplication')]",
      "type": "Microsoft.Sql/servers/databases",
      "name": "[concat(parameters('sqlSecondaryServerName'), '/', parameters('sqldbName'))]",
      "apiVersion": "2017-10-01-preview",
      "location": "[parameters('sqlSecondaryDbLocation')]",
      "properties": {
        "createMode": "OnlineSecondary",
        "sourceDatabaseId": "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), parameters('sqldbName'))]",
        "edition": "[parameters('sqldbEdition')]",
        "maxSizeBytes": "[parameters('sqldbSize')]",
        "requestedServiceObjectiveName": "[parameters('sqldbRequestedServiceObjectiveName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/', parameters('sqlSecondaryServerName'))]"
      ]
    },
    {
      "condition": "[or(parameters('enableGeoReplication'), parameters('enableFailoverGroup'))]",
      "name": "[parameters('sqlSecondaryServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[parameters('sqlSecondaryDbLocation')]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
      ],
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "version": "12.0"
      }
    }
  ]
}
